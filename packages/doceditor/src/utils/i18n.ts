import i18n from "i18next";
import { initReactI18next } from "react-i18next";

import config from "../../../../../buildtools/config/appsettings.json";

import { getLtrLanguageForEditor } from "@docspace/shared/utils/common";

import { translations } from "./autoGeneratedTranslations";

export const getI18NInstance = (lng: string, portalLng: string) => {
  const newInstance = i18n.createInstance();

  const currentLng = getLtrLanguageForEditor(lng, portalLng, true);

  // const cultures = config.web.cultures.split(",");

  newInstance.use(initReactI18next).init({
    lng: currentLng,
    fallbackLng: "en",
    load: "currentOnly",

    debug: false,

    interpolation: {
      escapeValue: false, // not needed for react as it escapes by default
      format: function (value, format) {
        if (format === "lowercase") return value.toLowerCase();
        return value;
      },
    },

    ns: ["Editor", "Common", "DeepLink"],
    defaultNS: "Editor",

    react: {
      useSuspense: false,
    },
    resources: {},
  });

  Array.from(translations).forEach(([lng, nsList]) => {
    Array.from(nsList).forEach(([ns, obj]) => {
      newInstance.addResourceBundle(lng, ns, obj, true, true);
    });
  });

  return newInstance;
};
